version: "2"
run:
  # If set, we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # Default: ""
  modules-download-mode: readonly

  # Include test files or not.
  # Default: true
  tests: false

linters:
  # TODO: incrementally enable all of them
  default: standard

  enable:
    - asasalint
    - asciicheck
    - bidichk
    # - bodyclose
    # - containedctx
    - contextcheck
    # - cyclop
    - decorder
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - exptostd
    - forbidigo
    - forcetypeassert
    - funcorder
    # - funlen
    - ginkgolinter
    - gocheckcompilerdirectives
    # - gochecknoglobals
    # - gochecknoinits
    # - gocognit
    - goconst
    - gocritic
    # - gocyclo
    - godot
    - godox
    # - goerr113
    - goheader
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - grouper
    - importas
    - interfacebloat
    - intrange
    # - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - misspell
    - musttag
    - nakedret
    # - nestif
    - nilerr
    - nilnil
    - nlreturn
    # - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    # - stylecheck
    - tagliatelle
    - testableexamples
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    # - varnamelen
    - wastedassign
    - whitespace
    # - wrapcheck
    # - wsl

  # disable:
    # # Not useful
    # - depguard
    # # Not terribly useful and ends up in too much boilerplate
    # - exhaustruct
    # # False positives (https://github.com/daixiang0/gci/issues/54)
    # - gci
    # # https://github.com/italia/developers-italia-api/issues/190)
    # # Don't feel about chasing this one down
    # - musttag
    #
    # # More false positive than actual issues
    # - mnd

  settings:
    wrapcheck:
      ignore-sigs:
        # No point in wrapping these
        - func encoding/json.Marshal(v any)
        - func encoding/json.UnmarshalJSON(v any)

        # Defaults
        - .Errorf(
        - errors.New(
        - errors.Unwrap(
        - .Wrap(
        - .Wrapf(
        - .WithMessage(
        - .WithMessagef(
        - .WithStack(
    funlen:
      # Increase the number of lines, considering funlen counts comments as well
      # (https://github.com/ultraware/funlen/issues/12)
      #
      # default: 60
      lines: 80
    usetesting:
      context-background: true
      context-todo: true
      os-chdir: true
      os-mkdir-temp: true
      os-setenv: true
      os-create-temp: true
      os-temp-dir: false

  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    paths:
      - third_party$
      - builtin$
      - examples$

formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
    - goimports
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
